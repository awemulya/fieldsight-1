version: '3.7'

services:
#  start of backend services
  postgres:
    image: mdillon/postgis:9.5
    container_name: fieldsight_postgis
    restart: always
    ports:
      - 5432:5432
    env_file:
      - db.txt

  mongo:
    image: mongo:3.4
    hostname: mongo
    environment:
      - MONGO_DATA=/data/db
    env_file:
      - .env
      - db.txt
    ports:
      - 27017:27017
    restart: on-failure

  redis_main:
    image: redis:3.2
    restart: always
    container_name: fieldsight_redis
    ports:
      - 6379:6379
    sysctls:
      - net.core.somaxconn=2048

  redis_cache:
    image: redis:3.2
    restart: on-failure
    ports:
      - 6380:6380
    sysctls:
        - net.core.somaxconn=2048

  #end of backend services
  #start of front end services
  fieldsight:
    image: fieldsight/fieldsight:0.0.1
    restart: always
    container_name: fieldsight_web
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./:/usr/src/data/
    ports:
      - 8001:8001
    env_file:
      - .env
      - db.txt
    depends_on:
      - postgres

  kpi:
    image: fieldsight/kpi:0.0.1
    restart: on-failure
    container_name: fieldsight_kpi
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
      - db.txt
    links:
      - fieldsight
    volumes:
      - ../kpi/:/srv/src/kpi/
    depends_on:
      - postgres
      - redis_main
      - redis_cache
    ports:
      - 8000:8000

  enketo:
    image: fieldsight/fieldsight_enketo:0.0.1
    restart: on-failure
    container_name: fieldsight_enketo
    command: npm start
    volumes:
      - ../enketo-express/:/srv/src/enketo_express/
    env_file:
      - .env
      - db.txt
    depends_on:
      - postgres
      - redis_main
    ports:
      - 8005:8005

#end of frontend services